  # Use this file to build and run the application with Docker Compose.

  services:

    consul:
      image: docker.io/bitnami/consul:1.20.5
      networks:
        - app-network
      ports:
        - "8300:8300"
        - "8500:8500"
        - "8600:8600"
      command: consul agent -dev -ui -client 0.0.0.0 -log-level=INFO
      labels:
        org.springframework.boot.ignore: true

    consul-config-loader:
      image: jhipster/consul-config-loader:v0.4.1
      networks:
        - app-network
      volumes:
        - ./central-server-config:/config
      environment:
        - INIT_SLEEP_SECONDS=5
        - CONSUL_URL=consul
        - CONSUL_PORT=8500
      depends_on:
        - consul
      labels:
        org.springframework.boot.ignore: true

    vault:
      image: hashicorp/vault:1.15.2  
      container_name: vault
      networks:
        - app-network
      environment:
        - VAULT_DEV_ROOT_TOKEN_ID=root
        - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8400
      ports:
        - "8400:8400"
      volumes:
        - vault-data:/vault/data
      cap_add:
        - IPC_LOCK
      restart: unless-stopped
      command: "server -dev"
    
    keycloak:
      image: quay.io/keycloak/keycloak:24.0.2
      container_name: keycloak
      ports:
      - "8081:8080"
      environment:
        KEYCLOAK_ADMIN: admin
        KEYCLOAK_ADMIN_PASSWORD: admin
      command:
      - start-dev
      networks:
        - app-network

    mysql:
      image: mysql:8.0
      environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=microProject
        - MYSQL_USER=microProject
        - MYSQL_PASSWORD=microProject
      ports:
        - "3307:3306"       # Exposed on host's 3307 for local access, inside network it's 3306
      networks:
        - app-network
      healthcheck:   
        test: ["CMD", "mysqladmin", "ping", "-hmysql", "-umicroProject", "-pmicroProject"]
        interval: 10s
        timeout: 5s
        retries: 10
    

    config-service:
      build:
        context: C:/config
        dockerfile: config.Dockerfile
      networks:
        - app-network
      ports:
        - "8889:8888"
      environment:
        - JAVA_OPTS=-Djava.net.preferIPv4Stack=true
        - SPRING_PROFILES_ACTIVE=dev
        - SERVER_ADDRESS=0.0.0.0
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
        interval: 30s
        timeout: 10s
        retries: 5

    user:
      build:
        context: ../../..
        dockerfile: src/main/docker/user.Dockerfile
      ports:
        - "8090:8090"
      networks:
        - app-network
      depends_on:
       consul:
         condition: service_started
       vault:
         condition: service_started
       config-service:
        condition: service_healthy
       mysql:
         condition: service_healthy
      environment:
        - SPRING_PROFILES_ACTIVE=dev
        - CONFIG_SERVER_URI=http://config-service:8888
      entrypoint: [ "sh", "-c", "echo 'Waiting for MySQL...' && sleep 30 && java -Djava.net.preferIPv4Stack=true -jar /app/user/UserModule.jar" ]

    
    patient:
      build:
        context: C:/patient
        dockerfile: patient.dockerfile
      ports:
        - "8101:8101"
      networks:
        - app-network
      depends_on:
       consul:
         condition: service_started
       vault:
         condition: service_started
       config-service:
        condition: service_healthy
       mysql:
         condition: service_healthy
      environment:
        - SPRING_PROFILES_ACTIVE=dev
        - CONFIG_SERVER_URI=http://config-service:8888
        - SPRING_CLOUD_CONSUL_HOST=consul
        - SPRING_CLOUD_CONSUL_PORT=8500
        - SPRING_CLOUD_VAULT_URI=http://vault:8400
      entrypoint: ["sh", "-c","echo 'Waiting for MySQL and Config Server...' && sleep 30 && java -Djava.net.preferIPv4Stack=true -Dspring.profiles.active=dev -Dspring.cloud.config.uri=http://config-service:8888 -jar /app/patient/patientmodule.jar"]
    
    vital:
      build:
        context: C:\vital\patient-vital
        dockerfile: vital.dockerfile
      ports:
        - "8000:8000"
      networks:
        - app-network
      depends_on:
       consul:
         condition: service_started
       vault:
         condition: service_started
       config-service:
        condition: service_healthy
       mysql:
         condition: service_healthy
      environment:
        - SPRING_PROFILES_ACTIVE=dev
        - CONFIG_SERVER_URI=http://config-service:8888
        - SPRING_CLOUD_CONSUL_HOST=consul
        - SPRING_CLOUD_CONSUL_PORT=8500
        - SPRING_CLOUD_VAULT_URI=http://vault:8400
      entrypoint: ["sh", "-c","echo 'Waiting for MySQL and Config Server...' && sleep 30 && java -Djava.net.preferIPv4Stack=true -Dspring.profiles.active=dev -Dspring.cloud.config.uri=http://config-service:8888 -jar /app/vital/vital.jar"]


  networks:
    app-network:
       name: app-network   # This ensures the network will always be named "app-network"
       driver: bridge

  volumes:
    vault-data:
      driver: local

  
